# United Kingdom (en_GB) resources_core translation file (UTF-8)
# 
# Note that any key can be doubled with a _NOUTF suffix
# to use when the NOUTF env variable is set to 1
# 
# Also, the comments always refer to the key below them.
# 


# help message for the syntax
# (FORMAT: STRING) 
HELP_SYNTAX = Valid options:\n\
\t--import [URL]: import into library\n\
\t--export [id] [output_type] [target]: export story to target\n\
\t--convert [URL] [output_type] [target] (+info): convert URL into target\n\
\t--read [id] ([chapter number]): read the given story from the library\n\
\t--read-url [URL] ([chapter number]): convert on the fly and read the \n\
\t\tstory, without saving it\n\
\t--search WEBSITE [free text] ([page] ([item])): search for the given terms, show the\n\
\t\tgiven page (page 0 means "how many page do we have", starts at page 1)\n\
\t--search-tag WEBSITE ([tag 1] [tag2...] ([page] ([item]))): list the known tags or \n\
\t\tsearch the stories for the given tag(s), show the given page of results\n\
\t--search: list the supported websites (where)\n\
\t--search [where] [keywords] (page [page]) (item [item]): search on the supported \n\
\t\twebsite and display the given results page of stories it found, or the story \n\
\t\tdetails if asked\n\
\t--search-tag [where]: list all the tags supported by this website\n\
\t--search-tag [index 1]... (page [page]) (item [item]): search for the given stories or \n\
\t\tsubtags, tag by tag, and display information about a specific page of results or \n\
\t\tabout a specific item if requested\n\
\t--list ([type]) : list the stories present in the library\n\
\t--set-source [id] [new source]: change the source of the given story\n\
\t--set-title [id] [new title]: change the title of the given story\n\
\t--set-author [id] [new author]: change the author of the given story\n\
\t--set-reader [reader type]: set the reader type to CLI, TUI or GUI for \n\
\t\tthis command\n\
\t--server: start the server mode (see config file for parameters)\n\
\t--stop-server: stop the remote server running on this port\n\
\t\tif any (key must be set to the same value)\n\
\t--remote [key] [host] [port]: select this remote server to get \n\
\t\t(or update or...) the stories from (key must be set to the \n\
\t\tsame value)\n\
\t--help: this help message\n\
\t--version: return the version of the program\n\
\n\
Supported input types:\n\
%s\n\
\n\
Supported output types:\n\
%s
# syntax error message
# (FORMAT: STRING) 
ERR_SYNTAX = Syntax error (try "--help")
# an input or output support type description
# (FORMAT: STRING) 
ERR_SYNTAX_TYPE = > %s: %s
# Error when retrieving data
# (FORMAT: STRING) 
ERR_LOADING = Error when retrieving data from: %s
# Error when saving to given target
# (FORMAT: STRING) 
ERR_SAVING = Error when saving to target: %s
# Error when unknown output format
# (FORMAT: STRING) 
ERR_BAD_OUTPUT_TYPE = Unknown output type: %s
# Error when converting input to URL/File
# (FORMAT: STRING) 
ERR_BAD_URL = Cannot understand file or protocol: %s
# URL/File not supported
# (FORMAT: STRING) 
ERR_NOT_SUPPORTED = URL not supported: %s
# Failed to download cover : %s
# (FORMAT: STRING) 
ERR_BS_NO_COVER = Failed to download cover: %s
# Canonical OPEN SINGLE QUOTE char (for instance: ‘)
# (FORMAT: STRING) 
OPEN_SINGLE_QUOTE = ‘
# Canonical CLOSE SINGLE QUOTE char (for instance: ’)
# (FORMAT: STRING) 
CLOSE_SINGLE_QUOTE = ’
# Canonical OPEN DOUBLE QUOTE char (for instance: “)
# (FORMAT: STRING) 
OPEN_DOUBLE_QUOTE = “
# Canonical CLOSE DOUBLE QUOTE char (for instance: ”)
# (FORMAT: STRING) 
CLOSE_DOUBLE_QUOTE = ”
# Name of the description fake chapter
# (FORMAT: STRING) 
DESCRIPTION = Description
# Name of a chapter with a name
# (FORMAT: STRING) 
CHAPTER_NAMED = Chapter %d: %s
# Name of a chapter without name
# (FORMAT: STRING) 
CHAPTER_UNNAMED = Chapter %d
# Default description when the type is not known by i18n
# (FORMAT: STRING) 
INPUT_DESC = Unknown type: %s
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_EPUB = EPUB files created by this program (we do not support "all" EPUB files)
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_TEXT = Stories encoded in textual format, with a few rules :\n\
\tthe title must be on the first line, \n\
\tthe author (preceded by nothing, "by " or "©") must be on the second \n\
\t\tline, possibly with the publication date in parenthesis\n\
\t\t(i.e., "By Unknown (3rd October 1998)"), \n\
\tchapters must be declared with "Chapter x" or "Chapter x: NAME OF THE \n\
\t\tCHAPTER", where "x" is the chapter number,\n\
\ta description of the story must be given as chapter number 0,\n\
\ta cover image may be present with the same filename but a PNG, \n\
\t\tJPEG or JPG extension.
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_INFO_TEXT = Contains the same information as the TEXT format, but with a \n\
\tcompanion ".info" file to store some metadata
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_FANFICTION = Fanfictions of many, many different universes, from TV shows to \n\
\tnovels to games.
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_FIMFICTION = Fanfictions devoted to the My Little Pony show
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_MANGAHUB = A well filled repository of mangas, in English
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_E621 = Furry website supporting comics, including MLP
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_E_HENTAI = Website offering many comics/mangas, mostly but not always NSFW
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_YIFFSTAR = A Furry website, story-oriented
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_CBZ = CBZ files coming from this very program
# Description of this input type
# (FORMAT: STRING) 
INPUT_DESC_HTML = HTML files coming from this very program
# Default description when the type is not known by i18n
# (FORMAT: STRING) 
OUTPUT_DESC = Unknown type: %s
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_EPUB = Standard EPUB file working on most e-book readers and viewers
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_TEXT = Local stories encoded in textual format, with a few rules :\n\
\tthe title must be on the first line, \n\
\tthe author (preceded by nothing, "by " or "©") must be on the second \n\
\t\tline, possibly with the publication date in parenthesis \n\
\t\t(i.e., "By Unknown (3rd October 1998)"), \n\
\tchapters must be declared with "Chapter x" or "Chapter x: NAME OF THE \n\
\t\tCHAPTER", where "x" is the chapter number,\n\
\ta description of the story must be given as chapter number 0,\n\
\ta cover image may be present with the same filename but a PNG, JPEG \n\
\t\tor JPG extension.
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_INFO_TEXT = Contains the same information as the TEXT format, but with a \n\
\tcompanion ".info" file to store some metadata
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_CBZ = CBZ file (basically a ZIP file containing images -- we store the images \n\
\tin PNG format by default)
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_HTML = HTML files (a directory containing the resources and "index.html")
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_LATEX = A LaTeX file using the "book" template
# Description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SYSOUT = A simple DEBUG console output
# Default description when the type is not known by i18n
# This item is used as a group, its content is not expected to be used.
OUTPUT_DESC_SHORT = %s
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_EPUB = Electronic book (.epub)
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_TEXT = Plain text (.txt)
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_INFO_TEXT = Plain text and metadata
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_CBZ = Comic book (.cbz)
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_LATEX = LaTeX (.tex)
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_SYSOUT = Console output
# Short description of this output type
# (FORMAT: STRING) 
OUTPUT_DESC_SHORT_HTML = HTML files with resources (directory, .html)
# Error message for unknown 2-letter LaTeX language code
# (FORMAT: STRING) 
LATEX_LANG_UNKNOWN = Unknown language: %s
# 'by' prefix before author name used to output the author, make sure it is covered by Config.BYS for input detection
# (FORMAT: STRING) 
BY = by
