# United Kingdom (en_GB) resources translation file (UTF-8)
# 
# Note that any key can be doubled with a _NOUTF suffix
# to use when the NOUTF env variable is set to 1
# 
# Also, the comments always refer to the key below them.
# 


# (WHAT: help message, WHERE: cli, FORMAT: %s = supported input, %s = supported output)
# help message for the syntax
HELP_SYNTAX = Valid options:\n\
\t--import [URL]: import into library\n\
\t--export [id] [output_type] [target]: export story to target\n\
\t--convert [URL] [output_type] [target] (+info): convert URL into target\n\
\t--read [id] ([chapter number]): read the given story from the library\n\
\t--read-url [URL] ([chapter number]): convert on the fly and read the story, without saving it\n\
\t--list: list the stories present in the library\n\
\t--set-reader [reader type]: set the reader type to CLI or LOCAL for this command\n\
\t--help: this help message\n\
\t--version: return the version of the program\n\
\n\
Supported input types:\n\
%s\n\
\n\
Supported output types:\n\
%s
# (WHAT: error message, WHERE: cli)
# syntax error message
ERR_SYNTAX = Syntax error (try "--help")
# (WHAT: error message, WHERE: cli, FORMAT: %s = support name, %s = support desc)
# an input or output support type description
ERR_SYNTAX_TYPE = %s: %s
# (WHAT: error message, WHERE: cli, FORMAT: %s = input string)
# Error when retrieving data
ERR_LOADING = Error when retrieving data from: %s
# (WHAT: error message, WHERE: cli, FORMAT: %s = save target)
# Error when saving to given target
ERR_SAVING = Error when saving to target: %s
# (WHAT: error message, WHERE: cli, FORMAT: %s = bad output format)
# Error when unknown output format
ERR_BAD_OUTPUT_TYPE = Unknown output type: %s
# (WHAT: error message, WHERE: cli, FORMAT: %s = input string)
# Error when converting input to URL/File
ERR_BAD_URL = Cannot understand file or protocol: %s
# (WHAT: error message, WHERE: cli, FORMAT: %s = input url)
# URL/File not supported
ERR_NOT_SUPPORTED = URL not supported: %s
# (WHAT: error message, WHERE: BasicSupport, FORMAT: %s = cover URL)
# Failed to download cover : %s
ERR_BS_NO_COVER = Failed to download cover: %s
# (WHAT: char, WHERE: LaTeX/BasicSupport, FORMAT: single char)
# Canonical OPEN SINGLE QUOTE char (for instance: `)
OPEN_SINGLE_QUOTE = `
OPEN_SINGLE_QUOTE_NOUTF = '
# (WHAT: char, WHERE: LaTeX/BasicSupport, FORMAT: single char)
# Canonical CLOSE SINGLE QUOTE char (for instance: ‘)
CLOSE_SINGLE_QUOTE = ‘
CLOSE_SINGLE_QUOTE_NOUTF = '
# (WHAT: char, WHERE: LaTeX/BasicSupport, FORMAT: single char)
# Canonical OPEN DOUBLE QUOTE char (for instance: “)
OPEN_DOUBLE_QUOTE = “
OPEN_DOUBLE_QUOTE_NOUTF = "
# (WHAT: char, WHERE: LaTeX/BasicSupport, FORMAT: single char)
# Canonical CLOSE DOUBLE QUOTE char (for instance: ”)
CLOSE_DOUBLE_QUOTE = ”
CLOSE_DOUBLE_QUOTE_NOUTF = "
# (WHAT: chapter name, WHERE: BasicSupport)
# Name of the description fake chapter
DESCRIPTION = Description
# (WHAT: chapter name, FORMAT: %d = number, %s = name)
# Name of a chapter with a name
CHAPTER_NAMED = Chapter %d: %s
# (WHAT: chapter name, FORMAT: %d = number, %s = name)
# Name of a chapter without name
CHAPTER_UNNAMED = Chapter %d
# (WHAT: input format description, WHERE: SupportType, FORMAT: %s = type)
# Default description when the type is not known by i18n
INPUT_DESC = Unknown type: %s
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_EPUB = EPUB files created by this program (we do not support "all" EPUB files)
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_TEXT = Support class for local stories encoded in textual format, with a few rules :\n\
\tthe title must be on the first line, \n\
\tthe author (preceded by nothing, "by " or "©") must be on the second line, possibly with the publication date in parenthesis (i.e., "By Unknown (3rd October 1998)"), \n\
\tchapters must be declared with "Chapter x" or "Chapter x: NAME OF THE CHAPTER", where "x" is the chapter number,\n\
\ta description of the story must be given as chapter number 0,\n\
\ta cover image may be present with the same filename but a PNG, JPEG or JPG extension.
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_INFO_TEXT = Contains the same information as the TEXT format, but with a companion ".info" file to store some metadata
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_FANFICTION = Fan fictions of many, many different universes, from TV shows to novels to games.
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_FIMFICTION = Fanfictions devoted to the My Little Pony show
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_MANGAFOX = A well filled repository of mangas, or, as their website states: Most popular manga scanlations read online for free at mangafox, as well as a close-knit community to chat and make friends.
# (WHAT: input format description, WHERE: SupportType)
# Description of this input type
INPUT_DESC_E621 = Furry website supporting comics, including MLP
# (WHAT: output format description, WHERE: OutputType, FORMAT: %s = type)
# Default description when the type is not known by i18n
OUTPUT_DESC = Unknown type: %s
# (WHAT: output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_EPUB = Standard EPUB file working on most e-book readers and viewers
# (WHAT: output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_TEXT = Local stories encoded in textual format, with a few rules :\n\
\tthe title must be on the first line, \n\
\tthe author (preceded by nothing, "by " or "©") must be on the second line, possibly with the publication date in parenthesis (i.e., "By Unknown (3rd October 1998)"), \n\
\tchapters must be declared with "Chapter x" or "Chapter x: NAME OF THE CHAPTER", where "x" is the chapter number,\n\
\ta description of the story must be given as chapter number 0,\n\
\ta cover image may be present with the same filename but a PNG, JPEG or JPG extension.
# (WHAT: output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_INFO_TEXT = Contains the same information as the TEXT format, but with a companion ".info" file to store some metadata
# (WHAT: output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_CBZ = CBZ file (basically a ZIP file containing images -- we store the images in PNG format)
# (WHAT: output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_HTML = HTML files (a directory containing the resources and "index.html")
# (WHAT: output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_LATEX = A LaTeX file using the "book" template
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SYSOUT = A simple DEBUG console output
# (WHAT: short output format description, WHERE: OutputType, FORMAT: %s = type)
# Default description when the type is not known by i18n
OUTPUT_DESC_SHORT = %s
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_EPUB = Electronic book (.epub)
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_TEXT = Plain text (.txt)
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_INFO_TEXT = Plain text and metadata
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_CBZ = Comic book (.cbz)
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_LATEX = LaTeX (.tex)
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_SYSOUT = Console output
# (WHAT: short output format description, WHERE: OutputType)
# Description of this output type
OUTPUT_DESC_SHORT_HTML = HTML files with resources (directory, .html)
# (WHAT: error message, WHERE: LaTeX, FORMAT: %s = the unknown 2-code language)
# Error message for unknown 2-letter LaTeX language code
LATEX_LANG_UNKNOWN = Unknown language: %s
# (WHAT: 'by' prefix before author name)
# used to output the author, make sure it is covered by Config.BYS for input detection
BY = by
